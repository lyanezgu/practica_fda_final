library(readr)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
View(hospital_charges)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
library(readr)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
h
hospital_charges
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
head(hospital_charges)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
head(hospital_charges)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
head(hospital_charges)
summary(hospital_charges)
names(hospital_charges) <- c('drg_def', 'prov_id', 'prov_name', 'prov_address', 'prov_city', 'prov_state',
'prov_zip', 'referral_reg', 'total_discharges', 'mean_covered_charges',
'mean_total_payments', 'mean_medicare_payments')
head(hospital_charges)
library(dplyr)
library(tidyr)
library(tidyr)
library(GGally)
library(dplyr)
library(tidyr)
remove_dollar <- function(x) {as.numeric(str_replace(x, '\\$', ''))}
charges <- charges %>%
mutate_at(vars(mean_covered_charges, mean_total_payments, mean_medicare_payments),
remove_dollar)
remove_dollar <- function(x) {as.numeric(str_replace(x, '\\$', ''))}
hospital_charges <- hospital_charges %>%
mutate_at(vars(mean_covered_charges, mean_total_payments, mean_medicare_payments),
remove_dollar)
remove_dollar <- function(x) {as.numeric(str_replace(x, '\\$', ''))}
hospital_charges <- hospital_charges %>%
mutate_at(vars(mean_covered_charges, mean_total_payments, mean_medicare_payments),remove_dollar)
hospital_charges <- hospital_charges %>%     mutate_at(vars(mean_covered_charges, mean_total_payments, mean_medicare_payments),remove_dollar)
hospital_charges$mean_covered_charges = as.numeric(gsub("\\$","",hospital_charges$mean_covered_charges))
head(hospital_charges)
hospital_charges$mean_covered_charges = as.numeric(gsub("\\$","",hospital_charges$mean_covered_charges)
hospital_charges$mean_total_payments = as.numeric(gsub("\\$","",hospital_charges$mean_total_payments))
hospital_charges$mean_covered_charges = as.numeric(gsub("\\$","",hospital_charges$mean_covered_charges))
hospital_charges$mean_covered_charges = as.numeric(gsub("\\$","",hospital_charges$mean_covered_charges))
hospital_charges$mean_total_payments = as.numeric(gsub("\\$","",hospital_charges$mean_total_payments))
hospital_charges$mean_medicare_payments = as.numeric(gsub("\\$","",hospital_charges$mean_medicare_payments))
head(hospital_charges)
hospital_charges$mean_covered_charges = as.numeric(gsub("\\$","",hospital_charges$mean_covered_charges))
hospital_charges$mean_total_payments = as.numeric(gsub("\\$","",hospital_charges$mean_total_payments))
hospital_charges$mean_medicare_payments = as.numeric(gsub("\\$","",hospital_charges$mean_medicare_payments))
head(hospital_charges)
ind <- which(hospital_charges$prov_state %in% sample(hospital_charges$prov_state,16000))
hospital_charges$prov_state[ind]<-NA
hospital_charges
ind <- which(hospital_charges$prov_state %in% sample(hospital_charges$prov_state,10))
hospital_charges$prov_state[ind]<-NA
hospital_charges
ind <- which(hospital_charges$prov_state %in% sample(hospital_charges$prov_state,10))
hospital_charges$prov_state[ind]<-NA
hospital_charges
ind <- which(hospital_charges$prov_state %in% sample(hospital_charges$prov_state,0.1))
hospital_charges$prov_state[ind]<-NA
hospital_charges
ind <- which(hospital_charges$prov_state %in% sample(hospital_charges$prov_state,0.1))
hospital_charges$prov_state[ind]<-NA
hospital_charges
ind <- which(hospital_charges$prov_state %in% sample(hospital_charges$prov_state,0.1))
hospital_charges$prov_state[ind]<-NA
hospital_charges
ind <- which(hospital_charges$prov_state %in% sample(hospital_charges$prov_state,10))
hospital_charges$prov_state[ind]<-NA
hospital_charges
ind <- which(hospital_charges$prov_state %in% sample(hospital_charges$prov_state,16000))
hospital_charges$prov_state[ind]<-NA
hospital_charges
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(readr)
library(ggplot2)
library(GGally)
library(dplyr)
library(GGally)
library(dplyr)
library(tidyr)
library(missForest)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
head(hospital_charges)
head(hospital_charges)
summary(hospital_charges)
names(hospital_charges) <- c('drg_def', 'prov_id', 'prov_name', 'prov_address', 'prov_city', 'prov_state',
'prov_zip', 'referral_reg', 'total_discharges', 'mean_covered_charges',
'mean_total_payments', 'mean_medicare_payments')
head(hospital_charges)
hospital_charges$mean_covered_charges = as.numeric(gsub("\\$","",hospital_charges$mean_covered_charges))
hospital_charges$mean_covered_charges = as.numeric(gsub("\\$","",hospital_charges$mean_covered_charges))
hospital_charges$mean_total_payments = as.numeric(gsub("\\$","",hospital_charges$mean_total_payments))
hospital_charges$mean_total_payments = as.numeric(gsub("\\$","",hospital_charges$mean_total_payments))
hospital_charges$mean_medicare_payments = as.numeric(gsub("\\$","",hospital_charges$mean_medicare_payments))
hospital_charges$mean_medicare_payments = as.numeric(gsub("\\$","",hospital_charges$mean_medicare_payments))
head(hospital_charges)
bind_cols(hospital_charges[c(1,3,5,7,8,9,11,12)],missForest::prodNA(hospital_charges[c(-1,-3,-5,-7,-8,-9,-11,-12)],noNA=0.1))
hospital_charges
bind_cols(hospital_charges[c(1,3,5,7,8,9,11,12)],missForest::prodNA(hospital_charges[c(-1,-3,-5,-7,-8,-9,-11,-12)],noNA=0.1))
hospital_charges <-bind_cols(hospital_charges[c(1,3,5,7,8,9,11,12)],missForest::prodNA(hospital_charges[c(-1,-3,-5,-7,-8,-9,-11,-12)],noNA=0.1))
set.seed(1)
hospital_charges <-bind_cols(hospital_charges[c(1,3,5,7,8,9,11,12)],missForest::prodNA(hospital_charges[c(-1,-3,-5,-7,-8,-9,-11,-12)],noNA=0.1))
hospital_charges
library(readr)
library(ggplot2)
library(GGally)
library(dplyr)
library(tidyr)
library(missForest)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
head(hospital_charges)
summary(hospital_charges)
names(hospital_charges) <- c('drg_def', 'prov_id', 'prov_name', 'prov_address', 'prov_city', 'prov_state',
'prov_zip', 'referral_reg', 'total_discharges', 'mean_covered_charges',
'mean_total_payments', 'mean_medicare_payments')
head(hospital_charges)
hospital_charges$mean_covered_charges = as.numeric(gsub("\\$","",hospital_charges$mean_covered_charges))
hospital_charges$mean_covered_charges = as.numeric(gsub("\\$","",hospital_charges$mean_covered_charges))
hospital_charges$mean_total_payments = as.numeric(gsub("\\$","",hospital_charges$mean_total_payments))
hospital_charges$mean_total_payments = as.numeric(gsub("\\$","",hospital_charges$mean_total_payments))
hospital_charges$mean_medicare_payments = as.numeric(gsub("\\$","",hospital_charges$mean_medicare_payments))
head(hospital_charges)
set.seed(1)
hospital_charges <-bind_cols(hospital_charges[c(1,3,5,7,8,9,11,12)],missForest::prodNA(hospital_charges[c(-1,-3,-5,-7,-8,-9,-11,-12)],noNA=0.1))
hospital_charges
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(GGally)
library(dplyr)
library(tidyr)
library(missForest)
library(knitr)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
head(hospital_charges)
summary(hospital_charges)
library(readr)
library(ggplot2)
library(GGally)
library(dplyr)
library(tidyr)
library(missForest)
names(hospital_charges) <- c('drg_def', 'prov_id', 'prov_name', 'prov_address', 'prov_city', 'prov_state',
'prov_zip', 'referral_reg', 'total_discharges', 'mean_covered_charges',
'mean_total_payments', 'mean_medicare_payments')
head(hospital_charges)
hospital_charges$mean_covered_charges = as.numeric(gsub("\\$","",hospital_charges$mean_covered_charges))
hospital_charges$mean_total_payments = as.numeric(gsub("\\$","",hospital_charges$mean_total_payments))
hospital_charges$mean_medicare_payments = as.numeric(gsub("\\$","",hospital_charges$mean_medicare_payments))
head(hospital_charges)
set.seed(1)
hospital_charges <-bind_cols(hospital_charges[c(1,3,5,7,8,9,11,12)],missForest::prodNA(hospital_charges[c(-1,-3,-5,-7,-8,-9,-11,-12)],noNA=0.1))
hospital_charges
set.seed(101)
sample <- sample.int(n=nrow(hospital_charges), size=floor(.80*nrow(hospital_charges)), replace = F)
train <- hospital_charges[sample,]
test <- hospital_charges[-sample,]
train
test
names(hospital_charges) <- c('drg_def', 'prov_id', 'prov_name', 'prov_address', 'prov_city', 'prov_state',
'prov_zip', 'referral_reg', 'total_discharges', 'mean_covered_charges',
'mean_total_payments', 'mean_medicare_payments')
head(hospital_charges)
knitr::opts_chunk$set(echo = TRUE)
library(formatR)
library(readr)
library(ggplot2)
library(GGally)
library(dplyr)
library(tidyr)
library(missForest)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
hospital_charges
head(hospital_charges)
summary(hospital_charges)
set.seed(101)
hospital_charges <-bind_cols(hospital_charges[c(1,3,5,7,8,9,11,12)],missForest::prodNA(hospital_charges[c(-1,-3,-5,-7,-8,-9,-11,-12)],noNA=0.1))
hospital_charges
set.seed(101)
sample <- sample.int(n=nrow(hospital_charges), size=floor(.80*nrow(hospital_charges)), replace = F)
train <- hospital_charges[sample,]
test <- hospital_charges[-sample,]
train
test
train
names(train) <- c('drg_def', 'prov_name', 'prov_city', 'prov_zip', 'referral_reg', 'total_discharges', 'mean_total_payments', 'mean_medicare_payments','prov_id', 'prov_address','prov_state', 'mean_covered_charges')
head(train)
train$mean_covered_charges = as.numeric(gsub("\\$","",train$mean_covered_charges))
train$mean_total_payments = as.numeric(gsub("\\$","",train$mean_total_payments))
train$mean_medicare_payments = as.numeric(gsub("\\$","",train$mean_medicare_payments))
head(train)
train <- train %>% mutate(copagos = mean_total_payments - mean_medicare_payments)
train
library(formattable)
train <- train %>% mutate(cobertura = percent(mean_medicare_payments/mean_total_payments))
train
#Haciendo la media de lo que cobra el hospital por estado
region_geog <- train %>% group_by(prov_state) %>% summarise (mean_total_price = mean(copagos))
region_geog
#Libreria usmap tiene el mapa de EEUU por estado
library(usmap)
statepop #en libreria usmap hay un dataframe que es la populacion para cada estado (siglas -abbr ) y nos interesa agrupar a este data frame la columna mean_total_payments
names(statepop) <- c('fips','prov_state','full','pop_2015') #cambiamos el nombre de la columna abbr para prov_state para tenerla igual en statepop y region_geog
statepop <- statepop %>% left_join(region_geog, by='prov_state') #juntamos region_geog y statepop
plot_usmap(data = statepop, values = "mean_total_price", color = "white") +
scale_fill_continuous(low='light blue', high ='dark blue',name = "Media Copagos", label = scales::comma) +
theme(legend.position = "right")
library(PerformanceAnalytics)
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
library(PerformanceAnalytics)
chart.Correlation(train)
library(PerformanceAnalytics)
cor(x=train$mean_total_payments, y=train$mean_medicare_payments)
with(train, plot(x=mean_total_payments, y=mean_medicare_payments, pch=20, col='blue',
xlab='mean total payments', las=1,
ylab='mean_medicare_payments'))
train %<% ggplot(aes(mean_total_payments, mean_medicare_payments)) +
geom_point(alpha=0.2) +
geom_smooth(method = 'lm') +
labs(title='Relacion entre variables total payments y medicare payments',
x='mean total payments',
y='mean medicare payments`')
train %>% ggplot(aes(mean_total_payments, mean_medicare_payments)) +
geom_point(alpha=0.2) +
geom_smooth(method = 'lm') +
labs(title='Relacion entre variables total payments y medicare payments',
x='mean total payments',
y='mean medicare payments`')
train %>% ggplot(aes(mean_total_payments, mean_medicare_payments)) +
geom_point(alpha=0.2) +
geom_smooth(formula 'y ~ x',method = 'lm') +
train %>% ggplot(aes(mean_total_payments, mean_medicare_payments)) +
geom_point(alpha=0.2) +
geom_smooth(method = 'lm') +
labs(title='Relacion entre variables total payments y medicare payments',
x='mean total payments',
y='mean medicare payments`')
train %>% ggplot(aes(mean_total_payments, mean_medicare_payments)) +
geom_point(alpha=0.2) +
geom_smooth(formula= 'y ~ x',method = 'lm') +
labs(title='Relacion entre variables total payments y medicare payments',
x='mean total payments',
y='mean medicare payments`')
library(PerformanceAnalytics)
cor(x=train$mean_total_payments, y=train$mean_medicare_payments)
with(train, plot(x=mean_total_payments, y=mean_medicare_payments, pch=20, col='blue',
xlab='mean total payments', las=1,
ylab='mean_medicare_payments'))
train %>% ggplot(aes(mean_total_payments, mean_medicare_payments)) +
geom_point(alpha=0.2, colour="green") +
geom_smooth(formula= 'y ~ x',method = 'lm') +
labs(title='Relacion entre variables total payments y medicare payments',
x='mean total payments',
y='mean medicare payments`')
# ver si el mean total payments sigue una normal
ggplot(train)+ geom_histogram(aes(x=mean_total_payments))
# ver si el mean total payments sigue una normal
ggplot(train)+ geom_histogram(aes(x=mean_total_payments), binwidth=3)
# ver si el mean total payments sigue una normal
ggplot(train)+ geom_histogram(aes(x=mean_total_payments), binwidth=10)
# ver si el mean total payments sigue una normal
ggplot(train)+ geom_histogram(aes(x=mean_total_payments), binwidth=20)
# ver si el mean total payments sigue una normal
ggplot(train)+ geom_histogram(aes(x=mean_total_payments), binwidth=100)
# ver si el mean total payments sigue una normal
ggplot(train)+ geom_histogram(aes(x=mean_total_payments), binwidth=300)
# ver si el mean total payments sigue una normal
train%>%
filter(mean_total_payments<100000 ) %>%
ggplot(train)+ geom_histogram(aes(x=mean_total_payments), binwidth=300)
# ver si el mean total payments sigue una normal
train%>%
filter(mean_total_payments<100000 ) %>%
ggplot(aes(x=mean_total_payments) )+ geom_histogram(binwidth=300)
# ver si el mean total payments sigue una normal
train%>%
filter(mean_total_payments<100000 ) %>%
ggplot(aes(x=mean_total_payments))+ geom_histogram(binwidth=300)
# ver si el mean total payments sigue una normal
train%>%
filter(mean_total_payments<100000 ) %>%
ggplot(aes(x=mean_total_payments))+ geom_histogram(binwidth=10)
# ver si el mean total payments sigue una normal
train%>%
filter(mean_total_payments<100000 ) %>%
ggplot(aes(x=mean_total_payments))+ geom_histogram(binwidth=1)
# ver si el mean total payments sigue una normal
train%>%
filter(mean_total_payments<100000 ) %>%
ggplot(aes(x=mean_total_payments))+ geom_histogram(binwidth=5)
train_num <- train %>% select_if(is.numeric)
train_num
p1 <- boxplot(train_num$mean_total_payments, col = rainbow(ncol(trees)))
p2 <- boxplot(train_num$mean_medicare_payments, col = rainbow(ncol(trees)))
p3 <- boxplot(train_num$copagos, col = rainbow(ncol(trees)))
p4 <- boxplot(train_num$cobertura, col = rainbow(ncol(trees)))
plot_grid(p1, p2, p3, p4)
install.packages("cowplot")
library(cowplot)
train_num <- train %>% select_if(is.numeric)
train_num
p1 <- boxplot(train_num$mean_total_payments, col = rainbow(ncol(trees)))
p2 <- boxplot(train_num$mean_medicare_payments, col = rainbow(ncol(trees)))
p3 <- boxplot(train_num$copagos, col = rainbow(ncol(trees)))
p4 <- boxplot(train_num$cobertura, col = rainbow(ncol(trees)))
plot_grid(p1, p2, p3, p4)
# ver si el mean total payments sigue una normal
train%>%
filter(mean_medicare_payments<100000 ) %>%
ggplot(aes(x=mean_medicare_payments))+ geom_histogram(binwidth=5)
# ver si el mean total payments sigue una normal
train%>%
filter(mean_total_payments<100000 ) %>%
ggplot(aes(x=mean_total_payments))+ geom_histogram(binwidth=5)
install.packages("VIM")
library(VIM)
summary(aggr(hospital_charges))
#referencia https://rpubs.com/sediaz/na_aggr
