library(ggplot2)
train %>% ggplot(aes(mean_total_payments, mean_medicare_payments)) +
geom_point(alpha=0.2, colour="green") +
geom_smooth(formula= 'y ~ x',method = 'lm') +
labs(title='Relacion entre variables total payments y medicare payments',
x='mean total payments',
y='mean medicare payments`')
# ver si el mean total payments sigue una normal
train%>%
filter(mean_total_payments<100000 ) %>%
ggplot(aes(x=mean_total_payments))+ geom_histogram()
# ver si el mean total payments sigue una normal
train%>%
filter(mean_total_payments<100000 ) %>%
ggplot(aes(x=log10(mean_total_payments)))+ geom_histogram()
# ver si el mean total payments sigue una normal
train%>%
filter(mean_medicare_payments<100000 ) %>%
ggplot(aes(x=mean_medicare_payments))+ geom_histogram()
# ver si el mean total payments sigue una normal
train%>%
filter(mean_medicare_payments<100000 ) %>%
ggplot(aes(x=log10(mean_medicare_payments)))+ geom_histogram()
# ver si el mean total payments sigue una normal
train%>%
filter(mean_medicare_payments<100000 ) %>%
ggplot(aes(x=copagos))+ geom_histogram()
# ver si el mean total payments sigue una normal
train%>%
filter(mean_medicare_payments<100000 ) %>%
ggplot(aes(x=log10(copagos)))+ geom_histogram()
#train %>% select(1:14) %>%
#  na.omit() %>%
#  ggpairs(columns = 1:13, ggplot2::aes(colour=group),cardinality_threshold=50000)
library(cowplot)
train_num <- train %>% select_if(is.numeric)
train_num
p1 <- ggplot (train_num, aes(y= train_num$mean_total_payments)) + geom_boxplot(fill = "red") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_total_payments") + ggtitle("Boxplot: mean_total_payments")
p11 <- ggplot (train_num, aes(y= log10(train_num$mean_total_payments))) + geom_boxplot(fill = "red") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_total_payments") + ggtitle("Boxplot: mean_total_payments")
plot_grid(p1, p11)
p2 <- ggplot (train_num, aes(y=train_num$mean_medicare_payments)) + geom_boxplot(fill = "blue") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_medicare_payments") + ggtitle("Boxplot: mean_medicare_payments")
p22 <- ggplot (train_num, aes(y= log10(train_num$mean_medicare_payments))) + geom_boxplot(fill = "blue") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_medicare_payments") + ggtitle("Boxplot: mean_medicare_payments")
plot_grid(p2, p22)
p3 <- ggplot (train_num, aes(y=train_num$copagos)) + geom_boxplot(fill = "yellow") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("copagos") + ggtitle("Boxplot: copagos")
p33 <- ggplot (train_num, aes(y=log10(train_num$copagos))) + geom_boxplot(fill = "yellow") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("copagos") + ggtitle("Boxplot: copagos")
plot_grid(p3, p33)
p4 <- ggplot (train_num, aes(y=train_num$cobertura)) + geom_boxplot(fill = "green") + scale_y_continuous(name = "% cobertura") + xlab("cobertura") + ggtitle("Boxplot: cobertura")
p4
library(formattable)
train <- train %>% mutate(cobertura = percent(mean_medicare_payments/mean_total_payments))
train
knitr::opts_chunk$set(echo = TRUE)
library(formatR)
library(readr)
library(ggplot2)
library(GGally)
library(dplyr)
library(tidyr)
library(missForest)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
hospital_charges
head(hospital_charges)
summary(hospital_charges)
set.seed(101)
hospital_charges <-bind_cols(hospital_charges[c(1,3,5,7,8,9,11,12)],missForest::prodNA(hospital_charges[c(-1,-3,-5,-7,-8,-9,-11,-12)],noNA=0.1))
hospital_charges
library(VIM)
summary(aggr(hospital_charges))
#referencia https://rpubs.com/sediaz/na_aggr
set.seed(101)
sample <- sample.int(n=nrow(hospital_charges), size=floor(.80*nrow(hospital_charges)), replace = F)
train <- hospital_charges[sample,]
test <- hospital_charges[-sample,]
train
test
train
names(train) <- c('drg_def', 'prov_name', 'prov_city', 'prov_zip', 'referral_reg', 'total_discharges', 'mean_total_payments', 'mean_medicare_payments','prov_id', 'prov_address','prov_state', 'mean_covered_charges')
head(train)
train$mean_covered_charges = as.numeric(gsub("\\$","",train$mean_covered_charges))
train$mean_total_payments = as.numeric(gsub("\\$","",train$mean_total_payments))
train$mean_medicare_payments = as.numeric(gsub("\\$","",train$mean_medicare_payments))
train$prov_zip = as.factor(train$prov_zip)
train$prov_id = as.factor(train$prov_id)
head(train)
str(train)
train <- train %>% mutate(copagos = mean_total_payments - mean_medicare_payments)
train
library(cowplot)
train_num <- train %>% select_if(is.numeric)
train_num
p1 <- ggplot (train_num, aes(y= train_num$mean_total_payments)) + geom_boxplot(fill = "red") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_total_payments") + ggtitle("Boxplot: mean_total_payments")
p11 <- ggplot (train_num, aes(y= log10(train_num$mean_total_payments))) + geom_boxplot(fill = "red") + scale_y_continuous(name = " log dólares", labels = scales::dollar) + xlab("mean_total_payments") + ggtitle("Boxplot: log mean_total_payments")
plot_grid(p1, p11)
mean(train_num$mean_total_payments)
p2 <- ggplot (train_num, aes(y=train_num$mean_medicare_payments)) + geom_boxplot(fill = "blue") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_medicare_payments") + ggtitle("Boxplot: mean_medicare_payments")
p22 <- ggplot (train_num, aes(y= log10(train_num$mean_medicare_payments))) + geom_boxplot(fill = "blue") + scale_y_continuous(name = "log dólares", labels = scales::dollar) + xlab("mean_medicare_payments") + ggtitle("Boxplot: log mean_medicare_payments")
plot_grid(p2, p22)
mean(train_num$mean_medicare_payments)
p3 <- ggplot (train_num, aes(y=train_num$copagos)) + geom_boxplot(fill = "yellow") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("copagos") + ggtitle("Boxplot: copagos")
p33 <- ggplot (train_num, aes(y=log10(train_num$copagos))) + geom_boxplot(fill = "yellow") + scale_y_continuous(name = "log dólares", labels = scales::dollar) + xlab("copagos") + ggtitle("Boxplot: log copagos")
plot_grid(p3, p33)
mean(train_num$copagos)
p4 <- ggplot (train_num, aes(y=train_num$cobertura)) + geom_boxplot(fill = "green") + scale_y_continuous(name = "% cobertura") + xlab("cobertura") + ggtitle("Boxplot: cobertura")
p4
library(cowplot)
train_num <- train %>% select_if(is.numeric)
train_num
p1 <- ggplot (train_num, aes(y= train_num$mean_total_payments)) + geom_boxplot(fill = "red") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_total_payments") + ggtitle("Boxplot: mean_total_payments")
p11 <- ggplot (train_num, aes(y= log10(train_num$mean_total_payments))) + geom_boxplot(fill = "red") + scale_y_continuous(name = " Log dólares", labels = scales::dollar) + xlab("mean_total_payments") + ggtitle("Boxplot: Log mean_total_payments")
plot_grid(p1, p11)
mean(train_num$mean_total_payments)
p2 <- ggplot (train_num, aes(y=train_num$mean_medicare_payments)) + geom_boxplot(fill = "blue") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_medicare_payments") + ggtitle("Boxplot: mean_medicare_payments")
p22 <- ggplot (train_num, aes(y= log10(train_num$mean_medicare_payments))) + geom_boxplot(fill = "blue") + scale_y_continuous(name = "Log dólares", labels = scales::dollar) + xlab("mean_medicare_payments") + ggtitle("Boxplot: Log mean_medicare_payments")
plot_grid(p2, p22)
mean(train_num$mean_medicare_payments)
p3 <- ggplot (train_num, aes(y=train_num$copagos)) + geom_boxplot(fill = "yellow") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("copagos") + ggtitle("Boxplot: copagos")
p33 <- ggplot (train_num, aes(y=log10(train_num$copagos))) + geom_boxplot(fill = "yellow") + scale_y_continuous(name = "Log dólares", labels = scales::dollar) + xlab("copagos") + ggtitle("Boxplot: Log copagos")
plot_grid(p3, p33)
mean(train_num$copagos)
p4 <- ggplot (train_num, aes(y=train_num$cobertura)) + geom_boxplot(fill = "green") + scale_y_continuous(name = "% cobertura") + xlab("cobertura") + ggtitle("Boxplot: cobertura")
p4
knitr::opts_chunk$set(echo = TRUE)
library(formatR)
library(readr)
library(ggplot2)
library(GGally)
library(dplyr)
library(tidyr)
library(missForest)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
hospital_charges
head(hospital_charges)
summary(hospital_charges)
set.seed(101)
hospital_charges <-bind_cols(hospital_charges[c(1,3,5,7,8,9,11,12)],missForest::prodNA(hospital_charges[c(-1,-3,-5,-7,-8,-9,-11,-12)],noNA=0.1))
hospital_charges
library(VIM)
summary(aggr(hospital_charges))
#referencia https://rpubs.com/sediaz/na_aggr
set.seed(101)
sample <- sample.int(n=nrow(hospital_charges), size=floor(.80*nrow(hospital_charges)), replace = F)
train <- hospital_charges[sample,]
test <- hospital_charges[-sample,]
train
test
train
names(train) <- c('drg_def', 'prov_name', 'prov_city', 'prov_zip', 'referral_reg', 'total_discharges', 'mean_total_payments', 'mean_medicare_payments','prov_id', 'prov_address','prov_state', 'mean_covered_charges')
head(train)
train$mean_covered_charges = as.numeric(gsub("\\$","",train$mean_covered_charges))
train$mean_total_payments = as.numeric(gsub("\\$","",train$mean_total_payments))
train$mean_medicare_payments = as.numeric(gsub("\\$","",train$mean_medicare_payments))
train$prov_zip = as.factor(train$prov_zip)
train$prov_id = as.factor(train$prov_id)
head(train)
str(train)
train <- train %>% mutate(copagos = mean_total_payments - mean_medicare_payments)
train
library(formattable)
train <- train %>% mutate(cobertura = percent(mean_medicare_payments/mean_total_payments))
train
#Haciendo la media de lo que cobra el hospital por estado
region_geog <- train %>% group_by(prov_state) %>% summarise (mean_total_price = mean(copagos))
region_geog
#Libreria usmap tiene el mapa de EEUU por estado
library(usmap)
statepop #en libreria usmap hay un dataframe que es la populacion para cada estado (siglas -abbr ) y nos interesa agrupar a este data frame la columna mean_total_payments
names(statepop) <- c('fips','prov_state','full','pop_2015') #cambiamos el nombre de la columna abbr para prov_state para tenerla igual en statepop y region_geog
statepop <- statepop %>% left_join(region_geog, by='prov_state') #juntamos region_geog y statepop
plot_usmap(data = statepop, values = "mean_total_price", color = "white") +
scale_fill_continuous(low='light blue', high ='dark blue',name = "Media Copagos", label = scales::comma) +
theme(legend.position = "right")
d2 <- train %>%
count(codigo_enf) %>%
top_n(10) %>%
arrange(n, codigo_enf) %>%
mutate(codigo_enf = factor(codigo_enf, levels = unique(codigo_enf)))
library(cowplot)
train_num <- train %>% select_if(is.numeric)
train_num
p1 <- ggplot (train_num, aes(y= train_num$mean_total_payments)) + geom_boxplot(fill = "red") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_total_payments") + ggtitle("Boxplot: mean_total_payments")
p11 <- ggplot (train_num, aes(y= log10(train_num$mean_total_payments))) + geom_boxplot(fill = "red") + scale_y_continuous(name = " Log dólares", labels = scales::dollar) + xlab("mean_total_payments") + ggtitle("Boxplot: Log mean_total_payments")
plot_grid(p1, p11)
mean(train_num$mean_total_payments)
p2 <- ggplot (train_num, aes(y=train_num$mean_medicare_payments)) + geom_boxplot(fill = "blue") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_medicare_payments") + ggtitle("Boxplot: mean_medicare_payments")
p22 <- ggplot (train_num, aes(y= log10(train_num$mean_medicare_payments))) + geom_boxplot(fill = "blue") + scale_y_continuous(name = "Log dólares", labels = scales::dollar) + xlab("mean_medicare_payments") + ggtitle("Boxplot: Log mean_medicare_payments")
plot_grid(p2, p22)
mean(train_num$mean_medicare_payments)
p3 <- ggplot (train_num, aes(y=train_num$copagos)) + geom_boxplot(fill = "yellow") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("copagos") + ggtitle("Boxplot: copagos")
p33 <- ggplot (train_num, aes(y=log10(train_num$copagos))) + geom_boxplot(fill = "yellow") + scale_y_continuous(name = "Log dólares", labels = scales::dollar) + xlab("copagos") + ggtitle("Boxplot: Log copagos")
plot_grid(p3, p33)
mean(train_num$copagos)
p4 <- ggplot (train_num, aes(y=train_num$cobertura)) + geom_boxplot(fill = "green") + scale_y_continuous(name = "% cobertura") + xlab("cobertura") + ggtitle("Boxplot: cobertura")
p4
mean(train_num$cobertura)
library(cowplot)
train_num <- train %>% select_if(is.numeric)
train_num
p1 <- ggplot (train_num, aes(y= train_num$mean_total_payments)) + geom_boxplot(fill = "red") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_total_payments") + ggtitle("Boxplot: mean_total_payments")
p11 <- ggplot (train_num, aes(y= log10(train_num$mean_total_payments))) + geom_boxplot(fill = "red") + scale_y_continuous(name = " Log dólares", labels = scales::dollar) + xlab("mean_total_payments") + ggtitle("Boxplot: Log mean_total_payments")
plot_grid(p1, p11)
mean(train_num$mean_total_payments)
p2 <- ggplot (train_num, aes(y=train_num$mean_medicare_payments)) + geom_boxplot(fill = "blue") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_medicare_payments") + ggtitle("Boxplot: mean_medicare_payments")
p22 <- ggplot (train_num, aes(y= log10(train_num$mean_medicare_payments))) + geom_boxplot(fill = "blue") + scale_y_continuous(name = "Log dólares", labels = scales::dollar) + xlab("mean_medicare_payments") + ggtitle("Boxplot: Log mean_medicare_payments")
plot_grid(p2, p22)
mean(train_num$mean_medicare_payments)
p3 <- ggplot (train_num, aes(y=train_num$copagos)) + geom_boxplot(fill = "yellow") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("copagos") + ggtitle("Boxplot: copagos")
p33 <- ggplot (train_num, aes(y=log10(train_num$copagos))) + geom_boxplot(fill = "yellow") + scale_y_continuous(name = "Log dólares", labels = scales::dollar) + xlab("copagos") + ggtitle("Boxplot: Log copagos")
plot_grid(p3, p33)
mean(train_num$copagos)
p4 <- ggplot (train_num, aes(y=train_num$cobertura)) + geom_boxplot(fill = "green") + scale_y_continuous(name = "% cobertura") + xlab("cobertura") + ggtitle("Boxplot: cobertura")
p4
mean(train_num$cobertura)
library(cowplot)
train_num <- train %>% select_if(is.numeric)
train_num
#test <- data.frame(x = train$drg_def)
train <-train %>%
separate(data = ., col = drg_def,
into = c("codigo_enf", "desc_enf"), sep = "-")
train
#test <- data.frame(x = train$drg_def)
train <-train %>%
separate(data = ., col = drg_def,
into = c("codigo_enf", "desc_enf"), sep = "-")
train <- train %>% mutate(copagos = mean_total_payments - mean_medicare_payments)
train
train <- train %>% mutate(cobertura = percent(mean_medicare_payments/mean_total_payments))
train
#test <- data.frame(x = train$drg_def)
train <-train %>%
separate(data = ., col = drg_def,
into = c("codigo_enf", "desc_enf"), sep = "-")
#test <- data.frame(x = train$drg_def)
train <-train %>%
separate(data = ., col = drg_def,
into = c("codigo_enf", "desc_enf"), sep = "-")
train
names(train) <- c('drg_def', 'prov_name', 'prov_city', 'prov_zip', 'referral_reg', 'total_discharges', 'mean_total_payments', 'mean_medicare_payments','prov_id', 'prov_address','prov_state', 'mean_covered_charges')
head(train)
train$mean_covered_charges = as.numeric(gsub("\\$","",train$mean_covered_charges))
train$mean_total_payments = as.numeric(gsub("\\$","",train$mean_total_payments))
train$mean_medicare_payments = as.numeric(gsub("\\$","",train$mean_medicare_payments))
train$prov_zip = as.factor(train$prov_zip)
train$prov_id = as.factor(train$prov_id)
head(train)
str(train)
knitr::opts_chunk$set(echo = TRUE)
library(formatR)
library(readr)
library(ggplot2)
library(GGally)
library(dplyr)
library(tidyr)
library(missForest)
library(VIM)
library(formattable)
library(usmap)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
hospital_charges
head(hospital_charges)
summary(hospital_charges)
set.seed(101)
hospital_charges <-bind_cols(hospital_charges[c(1,3,5,7,8,9,11,12)],missForest::prodNA(hospital_charges[c(-1,-3,-5,-7,-8,-9,-11,-12)],noNA=0.1))
hospital_charges
summary(aggr(hospital_charges))
#referencia https://rpubs.com/sediaz/na_aggr
set.seed(101)
sample <- sample.int(n=nrow(hospital_charges), size=floor(.80*nrow(hospital_charges)), replace = F)
train <- hospital_charges[sample,]
test <- hospital_charges[-sample,]
train
test
train
names(train) <- c('drg_def', 'prov_name', 'prov_city', 'prov_zip', 'referral_reg', 'total_discharges', 'mean_total_payments', 'mean_medicare_payments','prov_id', 'prov_address','prov_state', 'mean_covered_charges')
head(train)
#test <- data.frame(x = train$drg_def)
train <-train %>%
separate(data = ., col = drg_def,
into = c("codigo_enf", "desc_enf"), sep = "-")
train
train$mean_covered_charges = as.numeric(gsub("\\$","",train$mean_covered_charges))
train$mean_total_payments = as.numeric(gsub("\\$","",train$mean_total_payments))
train$mean_medicare_payments = as.numeric(gsub("\\$","",train$mean_medicare_payments))
train$prov_zip = as.factor(train$prov_zip)
train$prov_id = as.factor(train$prov_id)
head(train)
str(train)
d2 <- train %>%
count(codigo_enf) %>%
top_n(10) %>%
arrange(n, codigo_enf) %>%
mutate(codigo_enf = factor(codigo_enf, levels = unique(codigo_enf)))
q <- train %>%
filter(codigo_enf %in% d2$codigo_enf) %>%
mutate(codigo_enf = factor(codigo_enf, levels = levels(d2$codigo_enf))) %>%
ggplot(aes(x = codigo_enf, fill=desc_enf)) + geom_bar() + coord_flip() + theme_bw(base_size=9) + xlab("Codigo enfermedad") +
ylab("Frecuencia") +
ggtitle("10 enfermedadas mas comunes")
q
test <- top_10_caras %>% inner_join(train)
test <- top_10_caras %>% inner_join(train)
d3 <- train %>%
group_by(codigo_enf) %>% summarise(mean=mean(mean_total_payments)) %>% arrange(desc(mean))
top_10_caras <- head(d3,10)
top_10_caras
q <-ggplot(data=top_10_caras, mapping = aes(x = reorder(codigo_enf,-mean),mean)) + geom_bar(stat = "identity") + theme_bw(base_size=9) + ylab("Media Total Payments") + xlab("Codigo enfermedad") + ggtitle("10 enfermedadas máss caras") + scale_y_continuous(label = scales::dollar)
q
test <- top_10_caras %>% inner_join(train)
test
ggplot(test, aes(codigo_enf,prov_state, fill=cobertura))+geom_tile() + theme_bw(base_size=7) + scale_fill_gradient(low = "white", high = "purple")
knitr::opts_chunk$set(echo = TRUE)
library(formatR)
library(readr)
library(ggplot2)
library(GGally)
library(dplyr)
library(tidyr)
library(missForest)
library(VIM)
library(formattable)
library(usmap)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
hospital_charges
head(hospital_charges)
summary(hospital_charges)
set.seed(101)
hospital_charges <-bind_cols(hospital_charges[c(1,3,5,7,8,9,11,12)],missForest::prodNA(hospital_charges[c(-1,-3,-5,-7,-8,-9,-11,-12)],noNA=0.1))
hospital_charges
summary(aggr(hospital_charges))
#referencia https://rpubs.com/sediaz/na_aggr
set.seed(101)
sample <- sample.int(n=nrow(hospital_charges), size=floor(.80*nrow(hospital_charges)), replace = F)
train <- hospital_charges[sample,]
test <- hospital_charges[-sample,]
train
test
train
names(train) <- c('drg_def', 'prov_name', 'prov_city', 'prov_zip', 'referral_reg', 'total_discharges', 'mean_total_payments', 'mean_medicare_payments','prov_id', 'prov_address','prov_state', 'mean_covered_charges')
head(train)
#test <- data.frame(x = train$drg_def)
train <-train %>%
separate(data = ., col = drg_def,
into = c("codigo_enf", "desc_enf"), sep = "-")
train
train$mean_covered_charges = as.numeric(gsub("\\$","",train$mean_covered_charges))
train$mean_total_payments = as.numeric(gsub("\\$","",train$mean_total_payments))
train$mean_medicare_payments = as.numeric(gsub("\\$","",train$mean_medicare_payments))
train$prov_zip = as.factor(train$prov_zip)
train$prov_id = as.factor(train$prov_id)
head(train)
str(train)
train <- train %>% mutate(copagos = mean_total_payments - mean_medicare_payments)
train
train <- train %>% mutate(cobertura = percent(mean_medicare_payments/mean_total_payments))
train
#Haciendo la media de lo que cobra el hospital por estado
region_geog <- train %>% group_by(prov_state) %>% summarise (mean_total_price = mean(copagos))
region_geog
#Libreria usmap tiene el mapa de EEUU por estado
library(usmap)
statepop #en libreria usmap hay un dataframe que es la populacion para cada estado (siglas -abbr ) y nos interesa agrupar a este data frame la columna mean_total_payments
names(statepop) <- c('fips','prov_state','full','pop_2015') #cambiamos el nombre de la columna abbr para prov_state para tenerla igual en statepop y region_geog
statepop <- statepop %>% left_join(region_geog, by='prov_state') #juntamos region_geog y statepop
plot_usmap(data = statepop, values = "mean_total_price", color = "white") +
scale_fill_continuous(low='light blue', high ='dark blue',name = "Media Copagos", label = scales::comma) +
theme(legend.position = "right")
knitr::opts_chunk$set(echo = TRUE)
library(formatR)
library(readr)
library(ggplot2)
library(GGally)
library(dplyr)
library(tidyr)
library(missForest)
library(VIM)
library(formattable)
library(usmap)
hospital_charges <- read_csv("notebooks/hospital-charges.csv")
hospital_charges
head(hospital_charges)
summary(hospital_charges)
set.seed(101)
hospital_charges <-bind_cols(hospital_charges[c(1,3,5,7,8,9,11,12)],missForest::prodNA(hospital_charges[c(-1,-3,-5,-7,-8,-9,-11,-12)],noNA=0.1))
hospital_charges
summary(aggr(hospital_charges))
#referencia https://rpubs.com/sediaz/na_aggr
set.seed(101)
sample <- sample.int(n=nrow(hospital_charges), size=floor(.80*nrow(hospital_charges)), replace = F)
train <- hospital_charges[sample,]
test <- hospital_charges[-sample,]
train
test
train
names(train) <- c('drg_def', 'prov_name', 'prov_city', 'prov_zip', 'referral_reg', 'total_discharges', 'mean_total_payments', 'mean_medicare_payments','prov_id', 'prov_address','prov_state', 'mean_covered_charges')
head(train)
#test <- data.frame(x = train$drg_def)
train <-train %>%
separate(data = ., col = drg_def,
into = c("codigo_enf", "desc_enf"), sep = "-")
train
train$mean_covered_charges = as.numeric(gsub("\\$","",train$mean_covered_charges))
train$mean_total_payments = as.numeric(gsub("\\$","",train$mean_total_payments))
train$mean_medicare_payments = as.numeric(gsub("\\$","",train$mean_medicare_payments))
train$prov_zip = as.factor(train$prov_zip)
train$prov_id = as.factor(train$prov_id)
head(train)
str(train)
train <- train %>% mutate(copagos = mean_total_payments - mean_medicare_payments)
train
train <- train %>% mutate(cobertura = percent(mean_medicare_payments/mean_total_payments))
train
#Haciendo la media de lo que cobra el hospital por estado
region_geog <- train %>% group_by(prov_state) %>% summarise (mean_total_price = mean(copagos))
region_geog
#Libreria usmap tiene el mapa de EEUU por estado
library(usmap)
statepop #en libreria usmap hay un dataframe que es la populacion para cada estado (siglas -abbr ) y nos interesa agrupar a este data frame la columna mean_total_payments
names(statepop) <- c('fips','prov_state','full','pop_2015') #cambiamos el nombre de la columna abbr para prov_state para tenerla igual en statepop y region_geog
statepop <- statepop %>% left_join(region_geog, by='prov_state') #juntamos region_geog y statepop
plot_usmap(data = statepop, values = "mean_total_price", color = "white") +
scale_fill_continuous(low='light blue', high ='dark blue',name = "Media Copagos", label = scales::comma) +
theme(legend.position = "right")
d2 <- train %>%
count(codigo_enf) %>%
top_n(10) %>%
arrange(n, codigo_enf) %>%
mutate(codigo_enf = factor(codigo_enf, levels = unique(codigo_enf)))
q <- train %>%
filter(codigo_enf %in% d2$codigo_enf) %>%
mutate(codigo_enf = factor(codigo_enf, levels = levels(d2$codigo_enf))) %>%
ggplot(aes(x = codigo_enf, fill=desc_enf)) + geom_bar() + coord_flip() + theme_bw(base_size=9) + xlab("Codigo enfermedad") +
ylab("Frecuencia") +
ggtitle("10 enfermedadas mas comunes")
q
d3 <- train %>%
group_by(codigo_enf) %>% summarise(mean=mean(mean_total_payments)) %>% arrange(desc(mean))
top_10_caras <- head(d3,10)
top_10_caras
q <-ggplot(data=top_10_caras, mapping = aes(x = reorder(codigo_enf,-mean),mean)) + geom_bar(stat = "identity") + theme_bw(base_size=9) + ylab("Media Total Payments") + xlab("Codigo enfermedad") + ggtitle("10 enfermedadas máss caras") + scale_y_continuous(label = scales::dollar)
q
test <- top_10_caras %>% inner_join(train)
test
ggplot(test, aes(codigo_enf,prov_state, fill=cobertura))+geom_tile() + theme_bw(base_size=7) + scale_fill_gradient(low = "white", high = "purple")
library(PerformanceAnalytics)
cor(x=train$mean_total_payments, y=train$mean_medicare_payments)
with(train, plot(x=mean_total_payments, y=mean_medicare_payments, pch=20, col='blue',
xlab='mean total payments', las=1,
ylab='mean_medicare_payments'))
library(dplyr)
library(ggplot2)
train %>% ggplot(aes(mean_total_payments, mean_medicare_payments)) +
geom_point(alpha=0.2, colour="green") +
geom_smooth(formula= 'y ~ x',method = 'lm') +
labs(title='Relacion entre variables total payments y medicare payments',
x='mean total payments',
y='mean medicare payments`')
# ver si el mean total payments sigue una normal
train%>%
filter(mean_total_payments<100000 ) %>%
ggplot(aes(x=mean_total_payments))+ geom_histogram()
# ver si el mean total payments sigue una normal
train%>%
filter(mean_total_payments<100000 ) %>%
ggplot(aes(x=log10(mean_total_payments)))+ geom_histogram()
# ver si el mean total payments sigue una normal
train%>%
filter(mean_medicare_payments<100000 ) %>%
ggplot(aes(x=mean_medicare_payments))+ geom_histogram()
# ver si el mean total payments sigue una normal
train%>%
filter(mean_medicare_payments<100000 ) %>%
ggplot(aes(x=log10(mean_medicare_payments)))+ geom_histogram()
# ver si el mean total payments sigue una normal
train%>%
filter(mean_medicare_payments<100000 ) %>%
ggplot(aes(x=copagos))+ geom_histogram()
# ver si el mean total payments sigue una normal
train%>%
filter(mean_medicare_payments<100000 ) %>%
ggplot(aes(x=log10(copagos)))+ geom_histogram()
#train %>% select(1:14) %>%
#  na.omit() %>%
#  ggpairs(columns = 1:13, ggplot2::aes(colour=group),cardinality_threshold=50000)
library(cowplot)
train_num <- train %>% select_if(is.numeric)
train_num
p1 <- ggplot (train_num, aes(y= train_num$mean_total_payments)) + geom_boxplot(fill = "red") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_total_payments") + ggtitle("Boxplot: mean_total_payments")
p11 <- ggplot (train_num, aes(y= log10(train_num$mean_total_payments))) + geom_boxplot(fill = "red") + scale_y_continuous(name = " Log dólares", labels = scales::dollar) + xlab("mean_total_payments") + ggtitle("Boxplot: Log mean_total_payments")
plot_grid(p1, p11)
mean(train_num$mean_total_payments)
p2 <- ggplot (train_num, aes(y=train_num$mean_medicare_payments)) + geom_boxplot(fill = "blue") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("mean_medicare_payments") + ggtitle("Boxplot: mean_medicare_payments")
p22 <- ggplot (train_num, aes(y= log10(train_num$mean_medicare_payments))) + geom_boxplot(fill = "blue") + scale_y_continuous(name = "Log dólares", labels = scales::dollar) + xlab("mean_medicare_payments") + ggtitle("Boxplot: Log mean_medicare_payments")
plot_grid(p2, p22)
mean(train_num$mean_medicare_payments)
p3 <- ggplot (train_num, aes(y=train_num$copagos)) + geom_boxplot(fill = "yellow") + scale_y_continuous(name = "dólares", labels = scales::dollar) + xlab("copagos") + ggtitle("Boxplot: copagos")
p33 <- ggplot (train_num, aes(y=log10(train_num$copagos))) + geom_boxplot(fill = "yellow") + scale_y_continuous(name = "Log dólares", labels = scales::dollar) + xlab("copagos") + ggtitle("Boxplot: Log copagos")
plot_grid(p3, p33)
mean(train_num$copagos)
p4 <- ggplot (train_num, aes(y=train_num$cobertura)) + geom_boxplot(fill = "green") + scale_y_continuous(name = "% cobertura") + xlab("cobertura") + ggtitle("Boxplot: cobertura")
p4
mean(train_num$cobertura)
test <- top_10_caras %>% inner_join(train)
test
ggplot(test, aes(codigo_enf,prov_state, fill=cobertura))+geom_tile() + theme_bw(base_size=7) + scale_fill_gradient(low = "white", high = "purple")
library(dplyr)
library(ggplot2)
train %>% ggplot(aes(mean_total_payments, mean_medicare_payments)) +
geom_point(alpha=0.2, colour="green") +
geom_smooth(formula= 'y ~ x',method = 'lm') +
labs(title='Relacion entre variables total payments y medicare payments',
x='mean total payments',
y='mean medicare payments`')
